import os
import re

# ASS 文件头部模板
ASS_HEADER_TEMPLATE = """[Script Info]
; ass -> srt -> ass
; The original script was generated by Bilibili Evolved Danmaku Converter
; https://github.com/the1812/Bilibili-Evolved/
Title: {title}
ScriptType: v4.00+
PlayResX: 394
PlayResY: 854
Timer: 10.0000
WrapStyle: 0
ScaledBorderAndShadow: no

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: TopLeft,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,7,32,32,32,0
Style: TopCenter,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,8,32,32,32,0
Style: TopRight,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,9,32,32,32,0
Style: BottomLeft,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,1,32,32,32,0
Style: BottomCenter,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,2,32,32,32,0
Style: BottomRight,微软雅黑,56.93333333333333,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,3,32,32,32,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"""

def srt_time_to_ass_time(srt_time):
    # 转换 SRT 时间格式为 ASS 格式
    return srt_time.replace(',', '.')

def convert_srt_to_ass(srt_path, ass_path):
    filename = os.path.splitext(os.path.basename(srt_path))[0]
    with open(srt_path, 'r', encoding='utf-8-sig') as f:
        lines = f.readlines()

    ass_content = ASS_HEADER_TEMPLATE.format(title=filename)
    i = 0
    while i < len(lines):
        if re.match(r'^\d+$', lines[i].strip()):
            # 编号行
            i += 1
            if i >= len(lines):
                break
            time_line = lines[i].strip()
            match = re.match(r'(\d{2}:\d{2}:\d{2},\d{3})\s-->\s(\d{2}:\d{2}:\d{2},\d{3})', time_line)
            if not match:
                i += 1
                continue
            start, end = match.groups()
            start_ass = srt_time_to_ass_time(start)
            end_ass = srt_time_to_ass_time(end)

            i += 1
            text_lines = []
            while i < len(lines) and lines[i].strip() != '':
                text_lines.append(lines[i].strip().replace('\n', '').replace('\r', ''))
                i += 1
            text = r'\N'.join(text_lines).replace('{', '｛').replace('}', '｝')
            dialogue = f"Dialogue: 0,{start_ass},{end_ass},BottomCenter,,0,0,0,,{text}"
            ass_content += dialogue + '\n'
        i += 1

    with open(ass_path, 'w', encoding='utf-8-sig') as f:
        f.write(ass_content)

def main():
    current_dir = os.getcwd()
    ass_dir = os.path.join(current_dir, 'ass')
    os.makedirs(ass_dir, exist_ok=True)

    for file in os.listdir(current_dir):
        if file.lower().endswith('.srt'):
            srt_path = os.path.join(current_dir, file)
            ass_filename = os.path.splitext(file)[0] + '.ass'
            ass_path = os.path.join(ass_dir, ass_filename)
            convert_srt_to_ass(srt_path, ass_path)
            print(f"Converted: {file} -> ass/{ass_filename}")

if __name__ == '__main__':
    main()